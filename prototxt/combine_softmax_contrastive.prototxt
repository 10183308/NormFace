layer {
  name: "normalize1"
  type: "Normalize"
  bottom: "last_ip_layer"
  top: "norm1"
}
layer {
  name: "id_weight_l2"
  type: "Parameter"
  top: "id_weight_l2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  parameter_param {
    shape {
      dim: 10572
      dim: 512
    }
    blob_filler {
      type: "gaussian_unitball"
    }
  }
}
layer {
  name: "id_weight_l2_normalize"
  type: "Normalize"
  bottom: "id_weight_l2"
  top: "id_weight_l2_normalize"
}
layer {
  name: "id_weight_ip"
  type: "Parameter"
  top: "id_weight_ip"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  parameter_param {
    shape {
      dim: 10572
      dim: 512
    }
    blob_filler {
      type: "gaussian_unitball"
    }
  }
}
layer {
  name: "id_weight_ip_normalize"
  type: "Normalize"
  bottom: "id_weight_ip"
  top: "id_weight_ip_normalize"
}
layer {
  name: "euclidean"
  type: "InnerDistance"
  bottom: "norm1"
  bottom: "id_weight_l2_normalize"
  top: "euclidean"
  inner_product_param{
    bias_term: false
    distance_type: "L2"
  }
}
layer {
  name: "cosine"
  type: "InnerProduct"
  bottom: "norm1"
  bottom: "id_weight_ip_normalize"
  top: "cosine"
  inner_product_param{
    bias_term: false
  }
}
layer {
  name: "cosine_scale"
  type: "Scale"
  bottom: "cosine"
  top: "cosine"
  scale_param {
    num_axes: 0
    bias_term: false
    filler{
     value: 4
    }
    bias_filler{
      value: 0
    }
  }
}
layer {
  name: "softmax_loss"
  type: "SoftmaxWithLoss"
  bottom: "cosine"
  bottom: "label"
  top: "softmax_loss"
  loss_weight: 1
  softmax_param{
    normalize_type: "Softmax"
  }
}

layer {
  name: "contrastive_loss"
  type: "GeneralContrastiveLoss"
  bottom: "euclidean"
  bottom: "label"
  top: "contrastive_loss"
  top: "mean_distance"
  loss_weight: 0.01
  loss_weight: 1
  general_contrastive_loss_param {
    positive_margin: 0
    negative_margin: 1
    negative_weight: 1
    exp_negative_weight: false
  }
}

layer {
  name: "Accuracy"
  type: "Accuracy"
  bottom: "cosine"
  bottom: "label"
  top: "accuracy"
  include { 
    phase: TEST
  }
  accuracy_param {
    min_is_better: false
  }
}